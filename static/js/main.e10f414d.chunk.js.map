{"version":3,"sources":["chime.mp3","BottomButtons.js","PomodoroIcons.js","DurationControls.js","Timer.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","BottomButtons","props","react_default","a","createElement","className","timerOn","index_es","role","onClick","startTimer","icon","faPlay","size","pauseTimer","faPause","resetTimer","faUndo","volumeOn","toggleVolume","faVolumeUp","faVolumeMute","PomodoroIcons","sessionNumber","faCircle","faCheckCircle","TimeFormat","require","DurationControls","faArrowUp","increaseBreakDuration","fromS","breakDuration","faArrowDown","decreaseBreakDuration","increaseSessionDuration","sessionDuration","decreaseSessionDuration","Timer","src_DurationControls","isSession","sessionTimeRemaining","breakTimeRemaining","src_BottomButtons","src_PomodoroIcons","lib_index_es","modalId","open","onClose","onCloseModal","center","alarm","Alarm","source","Object","classCallCheck","this","sound","Audio","play","chime","App","_this","possibleConstructorReturn","getPrototypeOf","call","onOpenModal","setState","state","manageBreak","time","setInterval","handleBreakComplete","manageSession","handleSessionComplete","clearInterval","playAlarm","handlePomodoroCycleDone","playPromise","playSound","undefined","then","console","log","catch","err","concat","message","src_Timer","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e10f414d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chime.a5ef0ade.mp3\";","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlay } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPause } from '@fortawesome/free-solid-svg-icons';\r\nimport { faUndo } from '@fortawesome/free-solid-svg-icons';\r\nimport { faVolumeUp } from '@fortawesome/free-solid-svg-icons';\r\nimport { faVolumeMute } from '@fortawesome/free-solid-svg-icons';\r\nimport React from 'react';\r\n\r\nconst BottomButtons = (props) => (\r\n  <div className=\"bottom-btns\">\r\n\r\n    <div className={props.timerOn ? 'hidden' : null}>\r\n      <FontAwesomeIcon\r\n        role=\"button\"\r\n        onClick={props.startTimer}\r\n        icon={faPlay}\r\n        className=\"btn bottom-btn\"\r\n        size=\"2x\"\r\n      />\r\n    </div>\r\n\r\n    <div className={props.timerOn === false ? 'hidden' : null}>\r\n      <FontAwesomeIcon\r\n        role=\"button\"\r\n        onClick={props.pauseTimer}\r\n        icon={faPause}\r\n        className=\"btn bottom-btn\"\r\n        size=\"2x\"\r\n      />\r\n    </div>\r\n\r\n    <FontAwesomeIcon\r\n      role=\"button\"\r\n      onClick={props.resetTimer}\r\n      icon={faUndo}\r\n      className=\"btn bottom-btn\"\r\n      size=\"2x\"\r\n    />\r\n\r\n    <div className={props.volumeOn ? null : 'hidden'}>\r\n      <FontAwesomeIcon\r\n        role=\"button\"\r\n        onClick={props.toggleVolume}\r\n        icon={faVolumeUp}\r\n        className=\"btn bottom-btn\"\r\n        size=\"2x\"\r\n      />\r\n    </div>\r\n\r\n    <div className={props.volumeOn ? 'hidden' : null}>\r\n      <FontAwesomeIcon\r\n        role=\"button\"\r\n        onClick={props.toggleVolume}\r\n        icon={faVolumeMute}\r\n        className=\"btn bottom-btn\"\r\n        size=\"2x\"\r\n      />\r\n    </div>\r\n\r\n  </div>\r\n);\r\n\r\nexport default BottomButtons;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheckCircle } from '@fortawesome/free-regular-svg-icons';\r\nimport { faCircle } from '@fortawesome/free-regular-svg-icons';\r\nimport React from 'react';\r\n\r\nconst PomodoroIcons = props => (\r\n  <div>\r\n    {/* If session number is 0, display unchecked circle icon, if any other session number, display checked circle icon */}\r\n    {props.sessionNumber === 0 ?\r\n      <FontAwesomeIcon\r\n        icon={faCircle}\r\n        size=\"3x\"\r\n        className=\"session-checkbox\"\r\n      /> :\r\n      <FontAwesomeIcon\r\n        icon={faCheckCircle}\r\n        size=\"3x\"\r\n        className=\"session-checkbox\"\r\n      />\r\n    }\r\n\r\n    {/* If session number is 0 or 1, display unchecked circle icon, if any other session number, display checked circle icon */}\r\n    {props.sessionNumber < 2 ?\r\n      <FontAwesomeIcon\r\n        icon={faCircle}\r\n        size=\"3x\"\r\n        className=\"session-checkbox\"\r\n      /> :\r\n      <FontAwesomeIcon\r\n        icon={faCheckCircle}\r\n        size=\"3x\"\r\n        className=\"session-checkbox\"\r\n      />\r\n    }\r\n\r\n    {props.sessionNumber < 3 ?\r\n      <FontAwesomeIcon\r\n        icon={faCircle}\r\n        size=\"3x\"\r\n        className=\"session-checkbox\"\r\n      /> :\r\n      <FontAwesomeIcon\r\n        icon={faCheckCircle}\r\n        size=\"3x\"\r\n        className=\"session-checkbox\"\r\n      />\r\n    }\r\n\r\n    {props.sessionNumber < 4 ?\r\n      <FontAwesomeIcon\r\n        icon={faCircle}\r\n        size=\"3x\"\r\n        className=\"session-checkbox\"\r\n      /> :\r\n      <FontAwesomeIcon\r\n        icon={faCheckCircle}\r\n        size=\"3x\"\r\n        className=\"session-checkbox\"\r\n      />\r\n    }\r\n  </div>\r\n);\r\n\r\nexport default PomodoroIcons;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowUp } from '@fortawesome/free-solid-svg-icons';\r\nimport { faArrowDown } from '@fortawesome/free-solid-svg-icons';\r\nimport React from 'react';\r\nconst TimeFormat = require('hh-mm-ss');\r\n\r\nconst DurationControls = props => (\r\n  <div className=\"duration-controls\">\r\n\r\n    {/* BREAK LENGTH CONTROL */}\r\n    <div className=\"duration-control-group-with-label\">\r\n\r\n      <p className=\"duration-label\">Break<br />Length</p>\r\n\r\n      <div className=\"duration-control-group-without-label\">\r\n        <FontAwesomeIcon\r\n          icon={faArrowUp}\r\n          onClick={props.increaseBreakDuration}\r\n          className=\"btn duration-change-btn\"\r\n          size=\"2x\"\r\n        />\r\n\r\n        {/* TODO: divide by 60 again when testing complete */}\r\n        <p className=\"duration\" >{TimeFormat.fromS(props.breakDuration)}</p>\r\n\r\n        <FontAwesomeIcon\r\n          icon={faArrowDown} onClick={props.decreaseBreakDuration}\r\n          className=\"btn duration-change-btn\"\r\n          size=\"2x\"\r\n        />\r\n      </div> {/* End duration-control-group-without-label */}\r\n\r\n    </div> {/* End duration-control-group-with-label */}\r\n\r\n    {/* Just for adding space between break/session duration controls */}\r\n    <span className=\"between-duration-controls\" />\r\n\r\n    {/* SESSION LENGTH CONTROL */}\r\n    <div className=\"duration-control-group-with-label\">\r\n\r\n      <p className=\"duration-label\" >Session<br />Length</p>\r\n\r\n      <div className=\"duration-control-group-without-label\">\r\n        <FontAwesomeIcon\r\n          icon={faArrowUp}\r\n          onClick={props.increaseSessionDuration}\r\n          className=\"btn duration-change-btn\"\r\n          size=\"2x\"\r\n        />\r\n\r\n        {/* TODO: divide by 60 again when testing complete */}\r\n        <p className=\"duration\" >{TimeFormat.fromS(props.sessionDuration)}</p>\r\n\r\n        <FontAwesomeIcon\r\n          icon={faArrowDown}\r\n          onClick={props.decreaseSessionDuration}\r\n          className=\"btn duration-change-btn\"\r\n          size=\"2x\"\r\n        />\r\n      </div> {/* End duration-control-group-without-label */}\r\n\r\n    </div> {/* End duration-control-group-with-label */}\r\n\r\n  </div> // End duration-controls\r\n\r\n);\r\n\r\nexport default DurationControls;\r\n","import BottomButtons from './BottomButtons';\r\nimport Modal from 'react-responsive-modal';\r\nimport React from 'react';\r\nimport PomodoroIcons from './PomodoroIcons';\r\nimport DurationControls from './DurationControls';\r\nconst TimeFormat = require('hh-mm-ss');\r\n\r\nconst Timer = props => (\r\n\r\n<div className=\"timer\">\r\n\r\n  <DurationControls\r\n    breakDuration={props.breakDuration}\r\n    sessionDuration={props.sessionDuration}\r\n\r\n    increaseBreakDuration={props.increaseBreakDuration}\r\n    decreaseBreakDuration={props.decreaseBreakDuration}\r\n\r\n    increaseSessionDuration={props.increaseSessionDuration}\r\n    decreaseSessionDuration={props.decreaseSessionDuration}\r\n  />\r\n\r\n  {/* TIME REMAINING */}\r\n  <p className=\"time-remaining\">\r\n    {props.isSession ? TimeFormat.fromS(props.sessionTimeRemaining) : TimeFormat.fromS(props.breakTimeRemaining)}\r\n  </p>\r\n\r\n  <BottomButtons\r\n    timerOn={props.timerOn}\r\n    startTimer={props.startTimer}\r\n    pauseTimer={props.pauseTimer}\r\n    resetTimer={props.resetTimer}\r\n    volumeOn={props.volumeOn}\r\n    toggleVolume={props.toggleVolume}\r\n  />\r\n\r\n  <PomodoroIcons sessionNumber={props.sessionNumber} />\r\n\r\n  <Modal\r\n    modalId=\"modal\"\r\n    open={props.open}\r\n    onClose={props.onCloseModal}\r\n    center\r\n    className=\"modal\"\r\n  >\r\n    <div className=\"modal-text\">\r\n      <p>You finished a pomodoro cycle—great work!</p>\r\n      <p>Time to take a long break (15–30 minutes). When you're ready to begin another cycle, just click restart. (Or come back another day.)</p>\r\n    </div>\r\n  </Modal>\r\n</div>\r\n\r\n);\r\n\r\nexport default Timer;\r\n","import React, { Component } from 'react';\r\nimport Timer from './Timer';\r\nimport chime from './chime.mp3';\r\n\r\nclass Alarm {\r\n  constructor(source) {\r\n    this.sound = new Audio(source);\r\n  }\r\n\r\n  playSound() {\r\n    // Returns promise; see https://developers.google.com/web/updates/2016/03/play-returns-promise\r\n    return this.sound.play();\r\n  }\r\n}\r\n\r\nconst alarm = new Alarm(chime);\r\n\r\nclass App extends Component {\r\nconstructor() {\r\n  super();\r\n\r\n  this.state = {\r\n    sessionDuration: 1500,\r\n    breakDuration: 300,\r\n    sessionTimeRemaining: 1500,\r\n    breakTimeRemaining: 300,\r\n    isSession: true,\r\n    timerOn: false,\r\n    sessionNumber: 0,\r\n    open: false, // Modal informing user pomodoro cycle complete\r\n    volumeOn: true\r\n  }\r\n  this.alarm = alarm;\r\n}\r\n\r\n  onOpenModal = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  onCloseModal = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  // Using property initializer syntax to avoid need to bind, since arrow functions don't create their own this context and use value of enclosing context instead. transform-class-properties Babel plugin necessary to use this syntax (included in Create React App). Refer to https://itnext.io/property-initializers-what-why-and-how-to-use-it-5615210474a3 for more details\r\n\r\n  // DURATION CHANGES\r\n\r\n  decreaseBreakDuration = () => {\r\n    // Conditional statement prevents decrease when break is at 1 minute\r\n    if (this.state.breakDuration === 60) {\r\n      return undefined;\r\n    } else {\r\n      this.setState({\r\n        breakDuration: this.state.breakDuration - 60\r\n      });\r\n    }\r\n  }\r\n\r\n  increaseBreakDuration = () => {\r\n    this.setState({\r\n      breakDuration: this.state.breakDuration + 60\r\n    });\r\n  }\r\n\r\n  decreaseSessionDuration = () => {\r\n    // Conditional statement prevents decrease when session is at 5 minutes\r\n    if (this.state.sessionDuration === 300) {\r\n      return undefined;\r\n    } else {\r\n      this.setState({\r\n        sessionDuration: this.state.sessionDuration - 60,\r\n        sessionTimeRemaining: this.state.sessionTimeRemaining - 60\r\n      });\r\n    }\r\n  }\r\n\r\n  increaseSessionDuration = () => {\r\n    this.setState({\r\n      sessionDuration: this.state.sessionDuration + 60,\r\n      sessionTimeRemaining: this.state.sessionTimeRemaining + 60\r\n    });\r\n  }\r\n\r\n  manageBreak = () => {\r\n    this.time = setInterval(() => {\r\n      this.setState({\r\n        breakTimeRemaining: this.state.breakTimeRemaining - 1\r\n      });\r\n      if (this.state.breakTimeRemaining === 0) {\r\n        this.handleBreakComplete();\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  manageSession = () => {\r\n    // Every 1,000 ms (1 second), subtract 1 (a single second) from displayed sessionTimeRemaining. Assigned to this.time (scoped to entire class) in order to pass it to clearInterval() when pause button is clicked\r\n    this.time = setInterval(() => {\r\n      this.setState({\r\n        sessionTimeRemaining: this.state.sessionTimeRemaining - 1\r\n      });\r\n      if (this.state.sessionTimeRemaining === 0) {\r\n        this.handleSessionComplete();\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  playAlarm() {\r\n    const playPromise = this.alarm.playSound();\r\n    if (playPromise !== undefined) {\r\n      playPromise.then(() => {\r\n        console.log('Alarm audio playback started.');\r\n      }).catch((err) => {\r\n        console.log(`Alarm audio playback error: ${err.message}`);\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSessionComplete = () => {\r\n    clearInterval(this.time);\r\n    if (this.state.volumeOn) {\r\n      this.playAlarm();\r\n    }\r\n    this.setState({\r\n      sessionNumber: this.state.sessionNumber + 1\r\n    })\r\n\r\n    if (this.state.sessionNumber === 4) {\r\n      this.handlePomodoroCycleDone();\r\n    } else {\r\n      this.setState({\r\n        timerOn: false,\r\n        sessionTimeRemaining: this.state.sessionDuration,\r\n        breakTimeRemaining: this.state.breakDuration,\r\n        isSession: !this.state.isSession\r\n      });\r\n    }\r\n  }\r\n\r\n  handlePomodoroCycleDone = () => {\r\n    this.onOpenModal();\r\n    // Changed back to default values\r\n    this.setState({\r\n      isSession: true,\r\n      timerOn: false,\r\n      sessionDuration: 1500,\r\n      breakDuration: 300,\r\n      sessionTimeRemaining: 1500,\r\n    });\r\n  }\r\n\r\n  handleBreakComplete = () => {\r\n    clearInterval(this.time);\r\n    if (this.state.volumeOn) {\r\n      this.playAlarm();\r\n    }\r\n    this.setState({\r\n      timerOn: false,\r\n      sessionTimeRemaining: this.state.sessionDuration,\r\n      breakTimeRemaining: this.state.breakDuration,\r\n      isSession: !this.state.isSession\r\n    });\r\n  }\r\n\r\n  // PLAY, PAUSE, RESTART BUTTONS\r\n\r\n  startTimer = () => {\r\n    this.setState({\r\n      timerOn: true,\r\n    });\r\n\r\n    if (this.state.isSession) {\r\n      this.manageSession();\r\n    } else {\r\n      this.manageBreak();\r\n    }\r\n  }\r\n\r\n  pauseTimer = () => {\r\n    // Stops setInterval's calling its (setState) callback every 1000 ms\r\n    clearInterval(this.time);\r\n\r\n    this.setState({\r\n      timerOn: false\r\n    });\r\n  }\r\n\r\n  resetTimer = () => {\r\n    clearInterval(this.time);\r\n    this.setState({\r\n      timerOn: false,\r\n      sessionDuration: 1500,\r\n      breakDuration: 300,\r\n      sessionTimeRemaining: 1500,\r\n      breakTimeRemaining: 300,\r\n      sessionNumber: 0\r\n    });\r\n  }\r\n\r\n  toggleVolume = () => {\r\n    this.setState({\r\n      volumeOn: !this.state.volumeOn\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Timer\r\n        breakDuration={this.state.breakDuration}\r\n        sessionDuration={this.state.sessionDuration}\r\n\r\n        decreaseBreakDuration={this.decreaseBreakDuration}\r\n        increaseBreakDuration={this.increaseBreakDuration}\r\n        decreaseSessionDuration={this.decreaseSessionDuration}\r\n        increaseSessionDuration={this.increaseSessionDuration}\r\n\r\n        sessionTimeRemaining={this.state.sessionTimeRemaining}\r\n        breakTimeRemaining={this.state.breakTimeRemaining}\r\n        timerOn={this.state.timerOn}\r\n        sessionNumber={this.state.sessionNumber}\r\n\r\n        isSession={this.state.isSession}\r\n\r\n        startTimer={this.startTimer}\r\n        pauseTimer={this.pauseTimer}\r\n        resetTimer={this.resetTimer}\r\n\r\n        open={this.state.open}\r\n        onOpenModal={this.onOpenModal}\r\n        onCloseModal={this.onCloseModal}\r\n        volumeOn={this.state.volumeOn}\r\n        toggleVolume={this.toggleVolume}\r\n      />\r\n\r\n    );\r\n  };\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}