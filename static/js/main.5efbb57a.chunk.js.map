{"version":3,"sources":["Timer.js","App.js","index.js"],"names":["TimeFormat","require","Timer","props","react_default","a","createElement","className","index_es","icon","faArrowUp","onClick","increaseBreakDuration","size","breakDuration","faArrowDown","decreaseBreakDuration","increaseSessionDuration","sessionDuration","decreaseSessionDuration","fromS","timeRemaining","timerOn","role","startTimer","faPlay","pauseTimer","faPause","resetTimer","faUndo","faCircle","faCheckCircle","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","setState","time","setInterval","clearInterval","sessionNumber","src_Timer","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5efbb57a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowUp } from '@fortawesome/free-solid-svg-icons';\r\nimport { faArrowDown } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPlay } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPause } from '@fortawesome/free-solid-svg-icons';\r\nimport { faUndo } from '@fortawesome/free-solid-svg-icons';\r\nimport { faCheckCircle } from '@fortawesome/free-regular-svg-icons';\r\nimport { faCircle } from '@fortawesome/free-regular-svg-icons';\r\nconst TimeFormat = require('hh-mm-ss');\r\n\r\nconst Timer = (props) => (\r\n\r\n<div className=\"timer\">\r\n\r\n  <div className=\"duration-controls\">\r\n\r\n    {/* BREAK LENGTH CONTROL */}\r\n    <div className=\"duration-control-group-with-label\">\r\n\r\n      <p className=\"duration-label\">Break<br />Length</p>\r\n\r\n      <div className=\"duration-control-group-without-label\">\r\n        <FontAwesomeIcon\r\n          icon={faArrowUp}\r\n          onClick={props.increaseBreakDuration}\r\n          className=\"btn duration-change-btn\"\r\n          size=\"3x\"\r\n        />\r\n\r\n        <p className=\"duration\" >{props.breakDuration / 60}</p>\r\n\r\n        <FontAwesomeIcon\r\n          icon={faArrowDown} onClick={props.decreaseBreakDuration}\r\n          className=\"btn duration-change-btn\"\r\n          size=\"3x\"\r\n        />\r\n      </div> {/* End duration-control-group-without-label */}\r\n\r\n    </div> {/* End duration-control-group-with-label */}\r\n\r\n    {/* Just for adding space between break/session duration controls */}\r\n    <span className=\"between-duration-controls\" />\r\n\r\n    {/* SESSION LENGTH CONTROL */}\r\n    <div className=\"duration-control-group-with-label\">\r\n\r\n      <p className=\"duration-label\" >Session<br />Length</p>\r\n\r\n      <div className=\"duration-control-group-without-label\">\r\n        <FontAwesomeIcon\r\n          icon={faArrowUp}\r\n          onClick={props.increaseSessionDuration}\r\n          className=\"btn duration-change-btn\"\r\n          size=\"3x\"\r\n        />\r\n\r\n        <p className=\"duration\" >{props.sessionDuration / 60}</p>\r\n\r\n        <FontAwesomeIcon\r\n          icon={faArrowDown}\r\n          onClick={props.decreaseSessionDuration}\r\n          className=\"btn duration-change-btn\"\r\n          size=\"3x\"\r\n        />\r\n      </div> {/* End duration-control-group-without-label */}\r\n\r\n    </div> {/* End duration-control-group-with-label */}\r\n\r\n  </div> {/* End duration-controls */}\r\n\r\n  {/* TIME REMAINING */}\r\n  <p className=\"time-remaining\">{TimeFormat.fromS(props.timeRemaining)}</p>\r\n\r\n  {/* PLAY, PAUSE, RESTART BUTTONS */}\r\n  <div className=\"bottom-btns\">\r\n\r\n    <div className={props.timerOn ? 'hidden' : ''}>\r\n      <FontAwesomeIcon\r\n        role=\"button\"\r\n        onClick={props.startTimer}\r\n        icon={faPlay}\r\n        className=\"btn bottom-btn\"\r\n        size=\"3x\"\r\n      />\r\n    </div>\r\n\r\n    <div className={props.timerOn === false ? 'hidden' : ''}>\r\n      <FontAwesomeIcon\r\n        role=\"button\"\r\n        onClick={props.pauseTimer}\r\n        icon={faPause}\r\n        className=\"btn bottom-btn\"\r\n        size=\"3x\"\r\n      />\r\n    </div>\r\n\r\n    <FontAwesomeIcon\r\n      role=\"button\"\r\n      onClick={props.resetTimer}\r\n      icon={faUndo}\r\n      className=\"btn bottom-btn\"\r\n      size=\"3x\"\r\n    />\r\n\r\n  </div> {/* End bottom-btns */}\r\n\r\n  {/* NUMBER OF POMODOROS (SESSIONS) COMPLETED */}\r\n  <div>\r\n    {/* TODO: display 4 empty circles, replace each with a checked one after session is completed, until 4th session ends */}\r\n    <FontAwesomeIcon\r\n      icon={faCircle}\r\n      size=\"2x\"\r\n      className=\"session-checkbox\"\r\n    />\r\n    <FontAwesomeIcon\r\n      icon={faCheckCircle}\r\n      size=\"2x\"\r\n      className=\"session-checkbox\"\r\n    />\r\n  </div>\r\n\r\n</div>\r\n\r\n);\r\n\r\nexport default Timer;\r\n","import React, { Component } from 'react';\r\nimport Timer from './Timer';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      sessionDuration: 1500,\r\n      breakDuration: 300,\r\n      timeRemaining: 1500,\r\n      timerOn: false,\r\n      sessionNumber: 0\r\n    };\r\n  }\r\n\r\n  // Using property initializer syntax to avoid need to bind, since arrow functions don't create their own this context and use value of enclosing context instead. transform-class-properties Babel plugin necessary to use this syntax (included in Create React App). Refer to https://itnext.io/property-initializers-what-why-and-how-to-use-it-5615210474a3 for more details\r\n\r\n  // DURATION CHANGES\r\n\r\n  decreaseBreakDuration = () => {\r\n    // Conditional statement prevents decrease when break is at 1 minute\r\n    if (this.state.breakDuration === 60) {\r\n      return undefined;\r\n    } else {\r\n      this.setState({\r\n        breakDuration: this.state.breakDuration - 60\r\n      });\r\n    }\r\n  }\r\n\r\n  increaseBreakDuration = () => {\r\n    this.setState({\r\n      breakDuration: this.state.breakDuration + 60\r\n    });\r\n  }\r\n\r\n  decreaseSessionDuration = () => {\r\n    // Conditional statement prevents decrease when session is at 5 minutes\r\n    if (this.state.sessionDuration === 300) {\r\n      return undefined;\r\n    } else {\r\n      this.setState({\r\n        sessionDuration: this.state.sessionDuration - 60,\r\n        timeRemaining: this.state.timeRemaining - 60\r\n      });\r\n    }\r\n  }\r\n\r\n  increaseSessionDuration = () => {\r\n    this.setState({\r\n      sessionDuration: this.state.sessionDuration + 60,\r\n      timeRemaining: this.state.timeRemaining + 60\r\n    });\r\n  }\r\n\r\n  // PLAY, PAUSE, RESTART BUTTONS\r\n\r\n  startTimer = () => {\r\n    this.setState({\r\n      timerOn: true\r\n    });\r\n\r\n    // Every 1,000 ms (1 second), subtract 1 (a single second) from displayed timeRemaining. Assigned to this.time (scoped to entire class) in order to pass it to clearInterval() when pause button is clicked\r\n    this.time = setInterval(() => this.setState({\r\n      timeRemaining: this.state.timeRemaining - 1\r\n    }), 1000);\r\n  }\r\n\r\n  pauseTimer = () => {\r\n    // Stops setInterval's calling its (setState) callback every 1000 ms\r\n    clearInterval(this.time);\r\n\r\n    this.setState({\r\n      timerOn: false\r\n    });\r\n  }\r\n\r\n  resetTimer = () => {\r\n  // Stops setInterval's calling its (setState) callback every 1000 ms\r\n    clearInterval(this.time);\r\n    this.setState({\r\n      timerOn: false,\r\n      sessionDuration: 1500,\r\n      breakDuration: 300,\r\n      timeRemaining: 1500\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Timer\r\n        breakDuration={this.state.breakDuration}\r\n        sessionDuration={this.state.sessionDuration}\r\n\r\n        decreaseBreakDuration={this.decreaseBreakDuration}\r\n        increaseBreakDuration={this.increaseBreakDuration}\r\n        decreaseSessionDuration={this.decreaseSessionDuration}\r\n        increaseSessionDuration={this.increaseSessionDuration}\r\n\r\n        timeRemaining={this.state.timeRemaining}\r\n        timerOn={this.state.timerOn}\r\n\r\n        startTimer={this.startTimer}\r\n        pauseTimer={this.pauseTimer}\r\n        resetTimer={this.resetTimer}\r\n      />\r\n    );\r\n  };\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}