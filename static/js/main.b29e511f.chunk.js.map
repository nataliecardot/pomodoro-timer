{"version":3,"sources":["chime.mp3","BottomButtons.js","PomodoroIcons.js","DurationControls.js","Timer.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","BottomButtons","_ref","timerOn","startTimer","pauseTimer","resetTimer","toggleVolume","volumeOn","react_default","a","createElement","className","index_es","role","onClick","icon","faPlay","size","faPause","faUndo","faVolumeUp","faVolumeMute","PomodoroIcons","props","sessionNumber","faCircle","faCheckCircle","TimeFormat","require","DurationControls","breakDuration","sessionDuration","increaseBreak","decreaseBreak","increaseSession","decreaseSession","faArrowUp","fromS","faArrowDown","Timer","isSession","sessionTimeLeft","breakTimeLeft","onCloseModal","open","src_DurationControls","src_BottomButtons","src_PomodoroIcons","lib_index_es","modalId","onClose","center","alarm","Alarm","source","Object","classCallCheck","this","sound","Audio","play","chime","App","_this","possibleConstructorReturn","getPrototypeOf","call","onOpenModal","setState","state","manageBreak","time","setInterval","handleBreakComplete","manageSession","handleSessionComplete","clearInterval","playAlarm","handlePomodoroCycleDone","spacebarHandler","e","keyCode","playPromise","playSound","undefined","catch","err","console","log","concat","message","document","addEventListener","removeEventListener","src_Timer","Component","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.b29e511f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chime.a5ef0ade.mp3\";","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlay } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPause } from '@fortawesome/free-solid-svg-icons';\r\nimport { faUndo } from '@fortawesome/free-solid-svg-icons';\r\nimport { faVolumeUp } from '@fortawesome/free-solid-svg-icons';\r\nimport { faVolumeMute } from '@fortawesome/free-solid-svg-icons';\r\nimport React from 'react';\r\n\r\nconst BottomButtons = ({\r\n  timerOn,\r\n  startTimer,\r\n  pauseTimer,\r\n  resetTimer,\r\n  toggleVolume,\r\n  volumeOn,\r\n}) => (\r\n  <div className=\"bottom-btns\">\r\n    <div className={timerOn ? 'hidden' : null}>\r\n      <FontAwesomeIcon\r\n        role=\"button\"\r\n        onClick={startTimer}\r\n        icon={faPlay}\r\n        className=\"btn bottom-btn\"\r\n        size=\"2x\"\r\n      />\r\n    </div>\r\n\r\n    <div className={timerOn === false ? 'hidden' : null}>\r\n      <FontAwesomeIcon\r\n        role=\"button\"\r\n        onClick={pauseTimer}\r\n        icon={faPause}\r\n        className=\"btn bottom-btn\"\r\n        size=\"2x\"\r\n      />\r\n    </div>\r\n\r\n    <FontAwesomeIcon\r\n      role=\"button\"\r\n      onClick={resetTimer}\r\n      icon={faUndo}\r\n      className=\"btn bottom-btn\"\r\n      size=\"2x\"\r\n    />\r\n\r\n    <div className={volumeOn ? null : 'hidden'}>\r\n      <FontAwesomeIcon\r\n        role=\"button\"\r\n        onClick={toggleVolume}\r\n        icon={faVolumeUp}\r\n        className=\"btn bottom-btn\"\r\n        size=\"2x\"\r\n      />\r\n    </div>\r\n\r\n    <div className={volumeOn ? 'hidden' : null}>\r\n      <FontAwesomeIcon\r\n        role=\"button\"\r\n        onClick={toggleVolume}\r\n        icon={faVolumeMute}\r\n        className=\"btn bottom-btn\"\r\n        size=\"2x\"\r\n      />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default BottomButtons;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheckCircle } from '@fortawesome/free-regular-svg-icons';\r\nimport { faCircle } from '@fortawesome/free-regular-svg-icons';\r\nimport React from 'react';\r\n\r\nconst PomodoroIcons = props => (\r\n  <div>\r\n    {/* If session number is 0, display unchecked circle icon, if any other session number, display checked circle icon */}\r\n    {props.sessionNumber === 0 ?\r\n      <FontAwesomeIcon\r\n        icon={faCircle}\r\n        size=\"3x\"\r\n        className=\"session-checkbox\"\r\n      /> :\r\n      <FontAwesomeIcon\r\n        icon={faCheckCircle}\r\n        size=\"3x\"\r\n        className=\"session-checkbox\"\r\n      />\r\n    }\r\n\r\n    {/* If session number is 0 or 1, display unchecked circle icon, if any other session number, display checked circle icon */}\r\n    {props.sessionNumber < 2 ?\r\n      <FontAwesomeIcon\r\n        icon={faCircle}\r\n        size=\"3x\"\r\n        className=\"session-checkbox\"\r\n      /> :\r\n      <FontAwesomeIcon\r\n        icon={faCheckCircle}\r\n        size=\"3x\"\r\n        className=\"session-checkbox\"\r\n      />\r\n    }\r\n\r\n    {props.sessionNumber < 3 ?\r\n      <FontAwesomeIcon\r\n        icon={faCircle}\r\n        size=\"3x\"\r\n        className=\"session-checkbox\"\r\n      /> :\r\n      <FontAwesomeIcon\r\n        icon={faCheckCircle}\r\n        size=\"3x\"\r\n        className=\"session-checkbox\"\r\n      />\r\n    }\r\n\r\n    {props.sessionNumber < 4 ?\r\n      <FontAwesomeIcon\r\n        icon={faCircle}\r\n        size=\"3x\"\r\n        className=\"session-checkbox\"\r\n      /> :\r\n      <FontAwesomeIcon\r\n        icon={faCheckCircle}\r\n        size=\"3x\"\r\n        className=\"session-checkbox\"\r\n      />\r\n    }\r\n  </div>\r\n);\r\n\r\nexport default PomodoroIcons;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowUp } from '@fortawesome/free-solid-svg-icons';\r\nimport { faArrowDown } from '@fortawesome/free-solid-svg-icons';\r\nimport React from 'react';\r\nconst TimeFormat = require('hh-mm-ss');\r\n\r\nconst DurationControls = ({\r\n  breakDuration,\r\n  sessionDuration,\r\n  increaseBreak,\r\n  decreaseBreak,\r\n  increaseSession,\r\n  decreaseSession,\r\n}) => (\r\n  <div className=\"duration-controls\">\r\n    {/* BREAK LENGTH CONTROL */}\r\n    <div className=\"duration-control-group-with-label\">\r\n      <p className=\"duration-label\">Break</p>\r\n      <div className=\"duration-control-group-without-label\">\r\n        <FontAwesomeIcon\r\n          icon={faArrowUp}\r\n          onClick={increaseBreak}\r\n          className=\"btn duration-change-btn\"\r\n          size=\"2x\"\r\n        />\r\n\r\n        <p className=\"duration\">{TimeFormat.fromS(breakDuration)}</p>\r\n\r\n        <FontAwesomeIcon\r\n          icon={faArrowDown}\r\n          onClick={decreaseBreak}\r\n          className=\"btn duration-change-btn\"\r\n          size=\"2x\"\r\n        />\r\n      </div>{' '}\r\n      {/* End duration-control-group-without-label */}\r\n    </div>{' '}\r\n    {/* End duration-control-group-with-label */}\r\n    {/* Just for adding space between break/session duration controls */}\r\n    <span className=\"between-duration-controls\" />\r\n    {/* SESSION LENGTH CONTROL */}\r\n    <div className=\"duration-control-group-with-label\">\r\n      <p className=\"duration-label\">Session</p>\r\n      <div className=\"duration-control-group-without-label\">\r\n        <FontAwesomeIcon\r\n          icon={faArrowUp}\r\n          onClick={increaseSession}\r\n          className=\"btn duration-change-btn\"\r\n          size=\"2x\"\r\n        />\r\n\r\n        <p className=\"duration\">{TimeFormat.fromS(sessionDuration)}</p>\r\n\r\n        <FontAwesomeIcon\r\n          icon={faArrowDown}\r\n          onClick={decreaseSession}\r\n          className=\"btn duration-change-btn\"\r\n          size=\"2x\"\r\n        />\r\n      </div>{' '}\r\n      {/* End duration-control-group-without-label */}\r\n    </div>{' '}\r\n    {/* End duration-control-group-with-label */}\r\n  </div> // End duration-controls\r\n);\r\n\r\nexport default DurationControls;\r\n","import BottomButtons from './BottomButtons';\r\nimport Modal from 'react-responsive-modal';\r\nimport React from 'react';\r\nimport PomodoroIcons from './PomodoroIcons';\r\nimport DurationControls from './DurationControls';\r\nconst TimeFormat = require('hh-mm-ss');\r\n\r\nconst Timer = ({\r\n  breakDuration,\r\n  sessionDuration,\r\n  increaseBreak,\r\n  decreaseBreak,\r\n  increaseSession,\r\n  decreaseSession,\r\n  isSession,\r\n  sessionTimeLeft,\r\n  breakTimeLeft,\r\n  timerOn,\r\n  startTimer,\r\n  pauseTimer,\r\n  resetTimer,\r\n  volumeOn,\r\n  toggleVolume,\r\n  sessionNumber,\r\n  onCloseModal,\r\n  open,\r\n}) => (\r\n  <div className=\"timer\">\r\n    <DurationControls\r\n      breakDuration={breakDuration}\r\n      sessionDuration={sessionDuration}\r\n      increaseBreak={increaseBreak}\r\n      decreaseBreak={decreaseBreak}\r\n      increaseSession={increaseSession}\r\n      decreaseSession={decreaseSession}\r\n    />\r\n\r\n    {/* TIME REMAINING */}\r\n    <p className=\"time-remaining\">\r\n      {isSession\r\n        ? TimeFormat.fromS(sessionTimeLeft)\r\n        : TimeFormat.fromS(breakTimeLeft)}\r\n    </p>\r\n\r\n    <BottomButtons\r\n      timerOn={timerOn}\r\n      startTimer={startTimer}\r\n      pauseTimer={pauseTimer}\r\n      resetTimer={resetTimer}\r\n      volumeOn={volumeOn}\r\n      toggleVolume={toggleVolume}\r\n    />\r\n\r\n    <PomodoroIcons sessionNumber={sessionNumber} />\r\n\r\n    <Modal\r\n      modalId=\"modal\"\r\n      open={open}\r\n      onClose={onCloseModal}\r\n      center\r\n      className=\"modal\"\r\n    >\r\n      <div className=\"modal-text\">\r\n        <p>You finished a pomodoro cycle—great work!</p>\r\n        <p>\r\n          Time to take a long break (15–30 minutes). When you're ready to begin\r\n          another cycle, just click restart. (Or come back another day.)\r\n        </p>\r\n      </div>\r\n    </Modal>\r\n  </div>\r\n);\r\n\r\nexport default Timer;\r\n","import React, { Component } from 'react';\r\nimport Timer from './Timer';\r\nimport chime from './chime.mp3';\r\n\r\nclass Alarm {\r\n  constructor(source) {\r\n    this.sound = new Audio(source);\r\n  }\r\n\r\n  playSound() {\r\n    // Returns promise; see https://developers.google.com/web/updates/2016/03/play-returns-promise\r\n    return this.sound.play();\r\n  }\r\n}\r\n\r\nconst alarm = new Alarm(chime);\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      sessionDuration: 1500,\r\n      breakDuration: 300,\r\n      sessionTimeLeft: 1500,\r\n      breakTimeLeft: 300,\r\n      isSession: true,\r\n      timerOn: false,\r\n      sessionNumber: 0,\r\n      open: false, // Modal informing user pomodoro cycle complete\r\n      volumeOn: true,\r\n    };\r\n    this.alarm = alarm;\r\n  }\r\n\r\n  onOpenModal = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  onCloseModal = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  // DURATION CHANGES\r\n\r\n  decreaseBreak = () => {\r\n    // Conditional statement prevents decrease when break is at 1 minute\r\n    if (this.state.breakDuration === 60) {\r\n      return undefined;\r\n    } else {\r\n      this.setState({\r\n        breakDuration: this.state.breakDuration - 60,\r\n      });\r\n    }\r\n  };\r\n\r\n  increaseBreak = () => {\r\n    this.setState({\r\n      breakDuration: this.state.breakDuration + 60,\r\n    });\r\n  };\r\n\r\n  decreaseSession = () => {\r\n    // Conditional statement prevents decrease when session is at 5 minutes\r\n    if (this.state.sessionDuration === 300) {\r\n      return undefined;\r\n    } else {\r\n      this.setState({\r\n        sessionDuration: this.state.sessionDuration - 60,\r\n        sessionTimeLeft: this.state.sessionTimeLeft - 60,\r\n      });\r\n    }\r\n  };\r\n\r\n  increaseSession = () => {\r\n    this.setState({\r\n      sessionDuration: this.state.sessionDuration + 60,\r\n      sessionTimeLeft: this.state.sessionTimeLeft + 60,\r\n    });\r\n  };\r\n\r\n  manageBreak = () => {\r\n    this.time = setInterval(() => {\r\n      this.setState({\r\n        breakTimeLeft: this.state.breakTimeLeft - 1,\r\n      });\r\n      if (this.state.breakTimeLeft === 0) {\r\n        this.handleBreakComplete();\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  manageSession = () => {\r\n    // Every 1,000 ms (1 second), subtract 1 (a single second) from displayed sessionTimeLeft. Assigned to this.time (scoped to entire class) in order to pass it to clearInterval() when pause button is clicked\r\n    this.time = setInterval(() => {\r\n      this.setState({\r\n        sessionTimeLeft: this.state.sessionTimeLeft - 1,\r\n      });\r\n      if (this.state.sessionTimeLeft === 0) {\r\n        this.handleSessionComplete();\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  playAlarm() {\r\n    const playPromise = this.alarm.playSound();\r\n    if (playPromise !== undefined) {\r\n      playPromise\r\n        // .then(() => {\r\n        //   console.log('Alarm audio playback started.');\r\n        // })\r\n        .catch((err) => {\r\n          console.log(`Alarm audio playback error: ${err.message}`);\r\n        });\r\n    }\r\n  }\r\n\r\n  handleSessionComplete = () => {\r\n    clearInterval(this.time);\r\n    if (this.state.volumeOn) {\r\n      this.playAlarm();\r\n    }\r\n    this.setState({\r\n      sessionNumber: this.state.sessionNumber + 1,\r\n    });\r\n\r\n    if (this.state.sessionNumber === 4) {\r\n      this.handlePomodoroCycleDone();\r\n    } else {\r\n      this.setState({\r\n        timerOn: false,\r\n        sessionTimeLeft: this.state.sessionDuration,\r\n        breakTimeLeft: this.state.breakDuration,\r\n        isSession: !this.state.isSession,\r\n      });\r\n    }\r\n  };\r\n\r\n  handlePomodoroCycleDone = () => {\r\n    this.onOpenModal();\r\n    // Changed back to default values\r\n    this.setState({\r\n      isSession: true,\r\n      timerOn: false,\r\n      sessionDuration: 1500,\r\n      breakDuration: 300,\r\n      sessionTimeLeft: 1500,\r\n    });\r\n  };\r\n\r\n  handleBreakComplete = () => {\r\n    clearInterval(this.time);\r\n    if (this.state.volumeOn) {\r\n      this.playAlarm();\r\n    }\r\n    this.setState({\r\n      timerOn: false,\r\n      sessionTimeLeft: this.state.sessionDuration,\r\n      breakTimeLeft: this.state.breakDuration,\r\n      isSession: !this.state.isSession,\r\n    });\r\n  };\r\n\r\n  // PLAY, PAUSE, RESTART BUTTONS\r\n\r\n  startTimer = () => {\r\n    this.setState({\r\n      timerOn: true,\r\n    });\r\n\r\n    if (this.state.isSession) {\r\n      this.manageSession();\r\n    } else {\r\n      this.manageBreak();\r\n    }\r\n  };\r\n\r\n  pauseTimer = () => {\r\n    // Stops setInterval's calling its (setState) callback every 1000 ms\r\n    clearInterval(this.time);\r\n\r\n    this.setState({\r\n      timerOn: false,\r\n    });\r\n  };\r\n\r\n  resetTimer = () => {\r\n    clearInterval(this.time);\r\n    this.setState({\r\n      timerOn: false,\r\n      isSession: true,\r\n      sessionDuration: 1500,\r\n      breakDuration: 300,\r\n      sessionTimeLeft: 1500,\r\n      breakTimeLeft: 300,\r\n      sessionNumber: 0,\r\n    });\r\n  };\r\n\r\n  toggleVolume = () => {\r\n    this.setState({\r\n      volumeOn: !this.state.volumeOn,\r\n    });\r\n  };\r\n\r\n  spacebarHandler = (e) => {\r\n    if (e.keyCode === 32) {\r\n      this.state.timerOn ? this.pauseTimer() : this.startTimer();\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('keydown', this.spacebarHandler);\r\n  }\r\n\r\n  // Modern browsers remove event listeners on components when they're unmounted, but this is for added safety to prevent memory leaks. See https://stackoverflow.com/questions/53256662/react-why-should-i-remove-event-listeners\r\n  componentWillUnmount() {\r\n    document.removeEventListener('keydown', this.spacebarHandler);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Timer\r\n        breakDuration={this.state.breakDuration}\r\n        sessionDuration={this.state.sessionDuration}\r\n        decreaseBreak={this.decreaseBreak}\r\n        increaseBreak={this.increaseBreak}\r\n        decreaseSession={this.decreaseSession}\r\n        increaseSession={this.increaseSession}\r\n        sessionTimeLeft={this.state.sessionTimeLeft}\r\n        breakTimeLeft={this.state.breakTimeLeft}\r\n        timerOn={this.state.timerOn}\r\n        sessionNumber={this.state.sessionNumber}\r\n        isSession={this.state.isSession}\r\n        startTimer={this.startTimer}\r\n        pauseTimer={this.pauseTimer}\r\n        resetTimer={this.resetTimer}\r\n        open={this.state.open}\r\n        onOpenModal={this.onOpenModal}\r\n        onCloseModal={this.onCloseModal}\r\n        volumeOn={this.state.volumeOn}\r\n        toggleVolume={this.toggleVolume}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}