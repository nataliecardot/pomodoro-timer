{"version":3,"sources":["chime.mp3","PomodoroIcons.js","DurationControls.js","Timer.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","PomodoroIcons","props","react_default","a","createElement","sessionNumber","index_es","icon","faCircle","size","className","faCheckCircle","DurationControls","faArrowUp","onClick","increaseBreakDuration","breakDuration","faArrowDown","decreaseBreakDuration","increaseSessionDuration","sessionDuration","decreaseSessionDuration","TimeFormat","require","Timer","src_DurationControls","isSession","fromS","sessionTimeRemaining","breakTimeRemaining","timerOn","role","startTimer","faPlay","pauseTimer","faPause","resetTimer","faUndo","src_PomodoroIcons","alarm","Alarm","source","Object","classCallCheck","this","sound","Audio","play","chime","App","_this","possibleConstructorReturn","getPrototypeOf","call","state","setState","manageBreak","time","setInterval","handleBreakComplete","manageSession","handleSessionComplete","clearInterval","playAlarm","handlePomodoroCycleDone","console","log","playPromise","playSound","undefined","then","catch","err","concat","message","src_Timer","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.758e70fb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chime.a5ef0ade.mp3\";","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheckCircle } from '@fortawesome/free-regular-svg-icons';\r\nimport { faCircle } from '@fortawesome/free-regular-svg-icons';\r\nimport React from 'react';\r\n\r\nconst PomodoroIcons = props => (\r\n  <div>\r\n    {/* If session number is 0, display unchecked circle icon, if any other session number, display checked circle icon */}\r\n    {props.sessionNumber === 0 ?\r\n      <FontAwesomeIcon\r\n        icon={faCircle}\r\n        size=\"2x\"\r\n        className=\"session-checkbox\"\r\n      /> :\r\n      <FontAwesomeIcon\r\n        icon={faCheckCircle}\r\n        size=\"2x\"\r\n        className=\"session-checkbox\"\r\n      />\r\n    }\r\n\r\n    {/* If session number is 0 or 1, display unchecked circle icon, if any other session number, display checked circle icon */}\r\n    {props.sessionNumber < 2 ?\r\n      <FontAwesomeIcon\r\n        icon={faCircle}\r\n        size=\"2x\"\r\n        className=\"session-checkbox\"\r\n      /> :\r\n      <FontAwesomeIcon\r\n        icon={faCheckCircle}\r\n        size=\"2x\"\r\n        className=\"session-checkbox\"\r\n      />\r\n    }\r\n\r\n    {props.sessionNumber < 3 ?\r\n      <FontAwesomeIcon\r\n        icon={faCircle}\r\n        size=\"2x\"\r\n        className=\"session-checkbox\"\r\n      /> :\r\n      <FontAwesomeIcon\r\n        icon={faCheckCircle}\r\n        size=\"2x\"\r\n        className=\"session-checkbox\"\r\n      />\r\n    }\r\n\r\n    {props.sessionNumber < 4 ?\r\n      <FontAwesomeIcon\r\n        icon={faCircle}\r\n        size=\"2x\"\r\n        className=\"session-checkbox\"\r\n      /> :\r\n      <FontAwesomeIcon\r\n        icon={faCheckCircle}\r\n        size=\"2x\"\r\n        className=\"session-checkbox\"\r\n      />\r\n    }\r\n  </div>\r\n);\r\n\r\nexport default PomodoroIcons;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowUp } from '@fortawesome/free-solid-svg-icons';\r\nimport { faArrowDown } from '@fortawesome/free-solid-svg-icons';\r\nimport React from 'react';\r\n\r\nconst DurationControls = props => (\r\n  <div className=\"duration-controls\">\r\n\r\n    {/* BREAK LENGTH CONTROL */}\r\n    <div className=\"duration-control-group-with-label\">\r\n\r\n      <p className=\"duration-label\">Break<br />Length</p>\r\n\r\n      <div className=\"duration-control-group-without-label\">\r\n        <FontAwesomeIcon\r\n          icon={faArrowUp}\r\n          onClick={props.increaseBreakDuration}\r\n          className=\"duration-change-btn\"\r\n          size=\"2x\"\r\n        />\r\n\r\n        {/* TODO: divide by 60 again when testing complete */}\r\n        <p className=\"duration\" >{props.breakDuration}</p>\r\n\r\n        <FontAwesomeIcon\r\n          icon={faArrowDown} onClick={props.decreaseBreakDuration}\r\n          className=\"duration-change-btn\"\r\n          size=\"2x\"\r\n        />\r\n      </div> {/* End duration-control-group-without-label */}\r\n\r\n    </div> {/* End duration-control-group-with-label */}\r\n\r\n    {/* Just for adding space between break/session duration controls */}\r\n    <span className=\"between-duration-controls\" />\r\n\r\n    {/* SESSION LENGTH CONTROL */}\r\n    <div className=\"duration-control-group-with-label\">\r\n\r\n      <p className=\"duration-label\" >Session<br />Length</p>\r\n\r\n      <div className=\"duration-control-group-without-label\">\r\n        <FontAwesomeIcon\r\n          icon={faArrowUp}\r\n          onClick={props.increaseSessionDuration}\r\n          className=\"duration-change-btn\"\r\n          size=\"2x\"\r\n        />\r\n\r\n        {/* TODO: divide by 60 again when testing complete */}\r\n        <p className=\"duration\" >{props.sessionDuration}</p>\r\n\r\n        <FontAwesomeIcon\r\n          icon={faArrowDown}\r\n          onClick={props.decreaseSessionDuration}\r\n          className=\"duration-change-btn\"\r\n          size=\"2x\"\r\n        />\r\n      </div> {/* End duration-control-group-without-label */}\r\n\r\n    </div> {/* End duration-control-group-with-label */}\r\n\r\n  </div> // End duration-controls\r\n\r\n);\r\n\r\nexport default DurationControls;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlay } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPause } from '@fortawesome/free-solid-svg-icons';\r\nimport { faUndo } from '@fortawesome/free-solid-svg-icons';\r\nimport React from 'react';\r\nimport PomodoroIcons from './PomodoroIcons';\r\nimport DurationControls from './DurationControls';\r\nconst TimeFormat = require('hh-mm-ss');\r\n\r\nconst Timer = props => (\r\n\r\n<div className=\"timer\">\r\n\r\n  <DurationControls\r\n    breakDuration={props.breakDuration}\r\n    sessionDuration={props.sessionDuration}\r\n\r\n    increaseBreakDuration={props.increaseBreakDuration}\r\n    decreaseBreakDuration={props.decreaseBreakDuration}\r\n\r\n    increaseSessionDuration={props.increaseSessionDuration}\r\n    decreaseSessionDuration={props.decreaseSessionDuration}\r\n  />\r\n\r\n  {/* TIME REMAINING */}\r\n  <p className=\"time-remaining\">\r\n    {props.isSession ? TimeFormat.fromS(props.sessionTimeRemaining) : TimeFormat.fromS(props.breakTimeRemaining)}\r\n  </p>\r\n\r\n  {/* PLAY, PAUSE, RESTART BUTTONS */}\r\n  <div className=\"bottom-btns\">\r\n\r\n    <div className={props.timerOn ? 'hidden' : ''}>\r\n      <FontAwesomeIcon\r\n        role=\"button\"\r\n        onClick={props.startTimer}\r\n        icon={faPlay}\r\n        className=\"btn bottom-btn\"\r\n        size=\"4x\"\r\n      />\r\n    </div>\r\n\r\n    <div className={props.timerOn === false ? 'hidden' : ''}>\r\n      <FontAwesomeIcon\r\n        role=\"button\"\r\n        onClick={props.pauseTimer}\r\n        icon={faPause}\r\n        className=\"btn bottom-btn\"\r\n        size=\"4x\"\r\n      />\r\n    </div>\r\n\r\n    <FontAwesomeIcon\r\n      role=\"button\"\r\n      onClick={props.resetTimer}\r\n      icon={faUndo}\r\n      className=\"btn bottom-btn\"\r\n      size=\"4x\"\r\n    />\r\n\r\n  </div> {/* End bottom-btns */}\r\n\r\n  <PomodoroIcons sessionNumber={props.sessionNumber} />\r\n</div>\r\n\r\n);\r\n\r\nexport default Timer;\r\n","import React, { Component } from 'react';\r\nimport Timer from './Timer';\r\nimport chime from './chime.mp3'\r\n\r\nclass Alarm {\r\n  constructor(source) {\r\n    this.sound = new Audio(source);\r\n  }\r\n  playSound() {\r\n    // Returns promise; see https://developers.google.com/web/updates/2016/03/play-returns-promise\r\n    return this.sound.play();\r\n  }\r\n}\r\n\r\nconst alarm = new Alarm(chime);\r\n\r\nclass App extends Component {\r\nconstructor() {\r\n  super();\r\n\r\n  this.state = {\r\n    sessionDuration: 5, // TODO: change back to 1500 when testing done\r\n    breakDuration: 3, // TODO: change back to 300 when testing done\r\n    sessionTimeRemaining: 5, // TODO: change back to 1500 when testing done\r\n    breakTimeRemaining: 3, // TODO: change back to 300 when testing done\r\n    isSession: true,\r\n    timerOn: false,\r\n    sessionNumber: 0\r\n  }\r\n  this.alarm = alarm;\r\n}\r\n\r\n  // Using property initializer syntax to avoid need to bind, since arrow functions don't create their own this context and use value of enclosing context instead. transform-class-properties Babel plugin necessary to use this syntax (included in Create React App). Refer to https://itnext.io/property-initializers-what-why-and-how-to-use-it-5615210474a3 for more details\r\n\r\n  // DURATION CHANGES\r\n\r\n  decreaseBreakDuration = () => {\r\n    // Conditional statement prevents decrease when break is at 1 minute\r\n    if (this.state.breakDuration === 60) {\r\n      return undefined;\r\n    } else {\r\n      this.setState({\r\n        breakDuration: this.state.breakDuration - 60\r\n      });\r\n    }\r\n  }\r\n\r\n  increaseBreakDuration = () => {\r\n    this.setState({\r\n      breakDuration: this.state.breakDuration + 60\r\n    });\r\n  }\r\n\r\n  decreaseSessionDuration = () => {\r\n    // Conditional statement prevents decrease when session is at 5 minutes\r\n    if (this.state.sessionDuration === 300) {\r\n      return undefined;\r\n    } else {\r\n      this.setState({\r\n        sessionDuration: this.state.sessionDuration - 60,\r\n        sessionTimeRemaining: this.state.sessionTimeRemaining - 60\r\n      });\r\n    }\r\n  }\r\n\r\n  increaseSessionDuration = () => {\r\n    this.setState({\r\n      sessionDuration: this.state.sessionDuration + 60,\r\n      sessionTimeRemaining: this.state.sessionTimeRemaining + 60\r\n    });\r\n  }\r\n\r\n  manageBreak = () => {\r\n    this.time = setInterval(() => {\r\n      this.setState({\r\n        breakTimeRemaining: this.state.breakTimeRemaining - 1\r\n      });\r\n      if (this.state.breakTimeRemaining === 0) {\r\n        this.handleBreakComplete();\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  manageSession = () => {\r\n    // Every 1,000 ms (1 second), subtract 1 (a single second) from displayed sessionTimeRemaining. Assigned to this.time (scoped to entire class) in order to pass it to clearInterval() when pause button is clicked\r\n    this.time = setInterval(() => {\r\n      this.setState({\r\n        sessionTimeRemaining: this.state.sessionTimeRemaining - 1\r\n      });\r\n      if (this.state.sessionTimeRemaining === 0) {\r\n        this.handleSessionComplete();\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  playAlarm() {\r\n    const playPromise = this.alarm.playSound();\r\n    if (playPromise !== undefined) {\r\n      playPromise.then(() => {\r\n        console.log('Alarm audio playback started.');\r\n      }).catch((err) => {\r\n        console.log(`Alarm audio playback error: ${err.message}`);\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSessionComplete = () => {\r\n    clearInterval(this.time);\r\n    this.playAlarm();\r\n    this.setState({\r\n      sessionNumber: this.state.sessionNumber + 1\r\n    })\r\n\r\n    if (this.state.sessionNumber === 4) {\r\n      this.handlePomodoroCycleDone();\r\n    } else {\r\n      this.setState({\r\n        timerOn: false,\r\n        sessionTimeRemaining: this.state.sessionDuration,\r\n        breakTimeRemaining: this.state.breakDuration,\r\n        isSession: !this.state.isSession\r\n      });\r\n    }\r\n  }\r\n\r\n  handlePomodoroCycleDone = () => {\r\n    // TODO: Display message in modal\r\n    console.log('Great work! You finished a pomodoro cycle (four sessions). Time to relax.')\r\n    // Changed back to default values\r\n    this.setState({\r\n      isSession: true,\r\n      timerOn: false,\r\n      sessionDuration: 5, // TODO: change back to 1500\r\n      breakDuration: 3, // TODO: change back to 300 when testing done\r\n      sessionTimeRemaining: 5, // TODO: change back to 1500\r\n    });\r\n  }\r\n\r\n  handleBreakComplete = () => {\r\n    clearInterval(this.time);\r\n    this.playAlarm();\r\n    this.setState({\r\n      timerOn: false,\r\n      sessionTimeRemaining: this.state.sessionDuration,\r\n      breakTimeRemaining: this.state.breakDuration,\r\n      isSession: !this.state.isSession\r\n    });\r\n  }\r\n\r\n  // PLAY, PAUSE, RESTART BUTTONS\r\n\r\n  startTimer = () => {\r\n    this.setState({\r\n      timerOn: true,\r\n    });\r\n\r\n    if (this.state.isSession) {\r\n      this.manageSession();\r\n    } else {\r\n      this.manageBreak();\r\n    }\r\n  }\r\n\r\n  pauseTimer = () => {\r\n    // Stops setInterval's calling its (setState) callback every 1000 ms\r\n    clearInterval(this.time);\r\n\r\n    this.setState({\r\n      timerOn: false\r\n    });\r\n  }\r\n\r\n  resetTimer = () => {\r\n  // Stops setInterval's calling its (setState) callback every 1000 ms\r\n  // TODO: Display 4 unchecked circle icons again\r\n    clearInterval(this.time);\r\n    this.setState({\r\n      timerOn: false,\r\n      sessionDuration: 5, // TODO: change back to 1500\r\n      breakDuration: 3, // TODO: change back to 300 when testing done\r\n      sessionTimeRemaining: 5, // TODO: change back to 1500\r\n      breakTimeRemaining: 3, // TODO: change back to 300 when testing done\r\n      sessionNumber: 0\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Timer\r\n        breakDuration={this.state.breakDuration}\r\n        sessionDuration={this.state.sessionDuration}\r\n\r\n        decreaseBreakDuration={this.decreaseBreakDuration}\r\n        increaseBreakDuration={this.increaseBreakDuration}\r\n        decreaseSessionDuration={this.decreaseSessionDuration}\r\n        increaseSessionDuration={this.increaseSessionDuration}\r\n\r\n        sessionTimeRemaining={this.state.sessionTimeRemaining}\r\n        breakTimeRemaining={this.state.breakTimeRemaining}\r\n        timerOn={this.state.timerOn}\r\n        sessionNumber={this.state.sessionNumber}\r\n\r\n        isSession={this.state.isSession}\r\n\r\n        startTimer={this.startTimer}\r\n        pauseTimer={this.pauseTimer}\r\n        resetTimer={this.resetTimer}\r\n      />\r\n\r\n    );\r\n  };\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}